version: "3.7"

x-base: &base
  image: robotology/yarp-ros2:default
  environment:
    - DISPLAY=host.docker.internal:0
    - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    - XAUTHORITY=/home/user1/.Xauthority
    - QT_X11_NO_MITSHM=1
    - DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user1/1000/bus
    - XDG_RUNTIME_DIR=/run/user1/1000
    - YARP_COLORED_OUTPUT=1
    - YARP_NAMESPACE=/root
    - ROS_HOSTNAME=localhost
    - ROS_MASTER_URI=http://localhost:11311
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
#    - "${XAUTHORITY}:/home/user1/.Xauthority:rw"
#    - "${XDG_RUNTIME_DIR}/yarp:/run/user1/1000/yarp"
#    - "${XDG_RUNTIME_DIR}/dconf:/run/user1/1000/dconf"
#    - "${XDG_RUNTIME_DIR}/bus:/run/user1/1000/bus"
    - "C:/Users/elandini/AppData/Roaming/yarp/config/:/home/user1/.config/yarp:rw"
    - "${HOME}/.local/share/yarp:/home/user1/.local/share/yarp:rw"
    - "${HOME}/.gitconfig:/home/user1/.gitconfig"
    - ros1-volume:/home/user1/.ros
  network_mode: host
  ipc: host
  pid: host
  security_opt:
    - apparmor:unconfined

#x-base-ros1: &base_ros1
#  <<: *base
#  environment:
#    - DISPLAY=${DISPLAY}
#    - XAUTHORITY=/home/user1/.Xauthority
#    - QT_X11_NO_MITSHM=1
#    - DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user1/1000/bus
#    - XDG_RUNTIME_DIR=/run/user1/1000
#    - YARP_COLORED_OUTPUT=1
#    - YARP_NAMESPACE=/root
#    - ROS_DISTRO=noetic
#    - ROS_HOSTNAME=localhost
#    - ROS_MASTER_URI=http://localhost:11311
#    - AMENT_TRACE_SETUP_FILES=1


x-base-ros2: &base_ros2
  <<: *base
  environment:
    - DISPLAY=host.docker.internal:0
    - XAUTHORITY=/home/user1/.Xauthority
    - QT_X11_NO_MITSHM=1
    - DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user1/1000/bus
    - XDG_RUNTIME_DIR=/run/user1/1000
    - YARP_COLORED_OUTPUT=1
    - YARP_NAMESPACE=/root
    - ROS_DISTRO=galactic

services:

# Images
  yarp-ros2-image:
    image: robotology/yarp-ros2:default
    build:
      dockerfile: Dockerfile
      context: .
      args:
        username: user1
        uid: 1000
        gid: 1000


# Containers
#  roscore:
#    <<: *base_ros1
#    container_name: roscore
#    command: roscore -v

#  yarp-server:
#    <<: *base
#    container_name: yarp-server
#    # FIXME sleep
#    command: sh -c "sleep 3 && yarp namespace $${YARP_NAMESPACE}; yarp server --ros --read"
#    depends_on:
#      - roscore

  yarp-server:
    <<: *base
    container_name: yarp-server
    # FIXME sleep
    command: sh -c "sleep 3 && yarp namespace $${YARP_NAMESPACE}; yarp server --write"

  gazebo:
    <<: *base_ros2
    container_name: gazebo
    command: sh -c "yarp wait $${YARP_NAMESPACE}; gazebo /home/user1/yarp-ros2/r1_minimal.world"
    depends_on:
#      - roscore
      - yarp-server

  yarpmotorgui:
    <<: *base
    container_name: yarpmotorgui
    command: sh -c "yarp wait $${YARP_NAMESPACE}; yarp wait /SIM_CER_ROBOT/head/state:o; cd /home/user1/cer-sim/conf; yarpmotorgui --from yarpmotorgui.ini"
    depends_on:
      - yarp-server
      - gazebo

#  cer_rviz:
#    <<: *base_ros1
#    container_name: cer_rviz
#    command: sh -c "sleep 3 && roslaunch cer_rviz cer.launch"
#    depends_on:
#      - roscore

  robot_state_publisher_ros2:
    <<: *base_ros2
    container_name: robot_state_publisher_ros2
    command: ros2 launch cer_rviz2 robot_state_publisher.launch

  rviz2:
    <<: *base_ros2
    container_name: rviz2
    command: ros2 launch cer_rviz2 rviz2.launch

  #cer_rviz2:
    #<<: *base_ros2
    #container_name: cer_rviz2
    #command: ros2 launch cer_rviz2 cer.launch

  terminator:
    <<: *base
    container_name: terminator
#    command: terminator --no-dbus -T YARP -i /home/user1/yarp/doc/images/yarp-robot-64.png
    command: terminator

#  ros1_terminator:
#    <<: *base_ros1
#    container_name: ros1_terminator
#    command: terminator --no-dbus -T "ROS 1 (noetic)" -i /opt/ros/noetic/share/turtlesim/images/noetic.png

  ros2_terminator:
    <<: *base_ros2
    container_name: ros2_terminator
    command: terminator --no-dbus -T "ROS 2 (galactic)" -i /opt/ros/galactic/share/turtlesim/images/galactic.png


volumes:
  ros1-volume:
